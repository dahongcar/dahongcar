//==================================================

// PC与Mobile的公共LESS函数库
// 注意！！！！
// 此文件相当于OO中的抽象类，通过fn与_fn实例化。

//==================================================

@imgPath: "/images/";

// 盒子模型
.w(@w){width:@w;}
.h(@h){height:@h;}
.size(@w,@h){.w(@w);.h(@h);}
.square(@size){.size(@size,@size);}



.pt(@pt){padding-top:@pt}
.pl(@pl){padding-left:@pl}
.pr(@pr){padding-right:@pr}
.pb(@pb){padding-bottom:@pb}
.p(@padding){padding:@padding;}

.mt(@pt){margin-top:@pt}
.ml(@pl){margin-left:@pl}
.mr(@pr){margin-right:@pr}
.mb(@pb){margin-bottom:@pb}
.m(@margin){margin:@margin;}

.center(@w){.w(@w);.ml(auto);.mr(auto);}


// 背景 与 颜色
.c(@c){color:@c;}
.bc(@c){background-color:@c;}
.brp(@repeat){background-repeat:@repeat;}
.bp(@x,@y){background-position:@x @y;}


// background-image
.bi(@url:"",@type:""){background-image:url(~"@{url}");}
._bi(@url:""){background-image:~"url(@{imgPath}@{url})";}


// background
.bg(@url:"",@rp:no-repeat,@x:0,@y:0){background:transparent url(~"@{url}") @rp @x @y;}
._bg(@url:"",@rp:no-repeat,@x:0,@y:0){background:transparent url(~"@{imgPath}@{url}") @rp @x @y;}


// icon
.setIcon(@url, @w, @h, @display:inline-block){
    .bg(~"@{url}");.w(@w);.h(@h);.vm;display:@display;
}
._setIcon(@url, @w, @h, @display:inline-block){
    ._bg(~"@{url}");.w(@w);.h(@h);.vm;display:@display;
}
._setIconComm(@url, @w, @h, @display:inline-block){
}
.setIconSize(@w, @h, @display:inline-block){
    .w(@w);.h(@h);.vm;display:@display;
}


// sprite
.bgSprite(@url:"",@rp:no-repeat){.bg(~"@{url}?__sprite",@rp);}
._bgSprite(@url:"",@rp:no-repeat){._bg(~"@{url}?__sprite",@rp);}

.setIconSprite(@url, @w, @h, @display:inline-block){
    .bg(~"@{url}?__sprite");.w(@w);.h(@h);.vm;display:@display;
}
._setIconSprite(@url, @w, @h, @display:inline-block){
    ._bg(~"@{url}?__sprite");.w(@w);.h(@h);.vm;display:@display;
}


// 字体
.f(@s:14px){font-size:@s;}
.lh(@lh:1.6){line-height:@lh;}
.indent(@indent:2em){text-indent:@indent;}


// CSS3: 文字阴影
.ts(@x:0, @y:1px, @r:1px, @c:rgba(0,0,0,.5)){
    text-shadow:@x @y @r @c;
}

// 文字
.ellipsis(@w){.w(@w);.oh;text-overflow:ellipsis;white-space:nowrap;}
.text_hide(@h){.h(@h);.lh(999em);.oh;}
.text_wrap(){word-wrap:break-word;word-break:break-all;}


// CSS3: 圆角
.br(@s: 5px) {
    border-radius:@s;
    -moz-border-radius:@s;
    -webkit-border-radius:@s;
}
.br(@tlRadius, @trRadius, @blRadius, @brRadius){
    .br_tl(@tlRadius);
    .br_tr(@trRadius);
    .br_bl(@blRadius);
    .br_br(@brRadius);        
}

.br_tl(@radius) {
    border-top-left-radius: @radius;
    -moz-border-radius-topleft: @radius;
    -webkit-border-top-left-radius: @radius;
}
.br_tr(@radius) {
    border-top-right-radius: @radius;
    -moz-border-radius-topright: @radius;
    -webkit-border-top-right-radius: @radius;
}
.br_br(@radius) {
    border-bottom-right-radius: @radius;
    -moz-border-radius-bottomright: @radius;
    -webkit-border-bottom-right-radius: @radius;
}
.br_bl(@radius) {
    border-bottom-left-radius: @radius;
    -moz-border-radius-bottomleft: @radius;
    -webkit-border-bottom-left-radius: @radius;
}

.br_t(@radius) {
    .br_tl(@radius);
    .br_tr(@radius);
}
.br_r(@radius) {
    .br_tr(@radius);
    .br_br(@radius);
}
.br_b(@radius) {
    .br_bl(@radius);
    .br_br(@radius);
}
.br_l(@radius) {
    .br_tl(@radius);
    .br_bl(@radius);
}


// CSS3: 阴影
.bs(@arguments){
    box-shadow:@arguments;
    -moz-box-shadow:@arguments;
    -webkit-box-shadow:@arguments;
}
.bs(@arguments1, @arguments2){
    box-shadow:@arguments1,@arguments2;
    -moz-box-shadow:@arguments1,@arguments2;
    -webkit-box-shadow:@arguments1,@arguments2;
}


// CSS3: 渐变

.lg(@startColor, @endColor, @start:0, @stop:100%) when (isnumber(@start)){//判断第3个参数是否为数字
    background-color:mix(@startColor, @endColor, 40%);
    background-image:-moz-linear-gradient(top, @startColor @start, @endColor @stop);
    background-image:-webkit-gradient(linear, 0 @start, 0 @stop, from(@startColor), to(@endColor));
    background-image:-webkit-linear-gradient(top, @startColor @start, @endColor @stop);
    background-image:-o-linear-gradient(top, @startColor @start, @endColor @stop);
    background-image:linear-gradient(to bottom, @startColor @start, @endColor @stop);
}
.lg(@bgColor, @startColor, @endColor, @start:0, @stop:100%) when (iscolor(@endColor)){//判断第3个参数是否为颜色
    background-color:@bgColor;
    background-image:-moz-linear-gradient(top, @startColor @start, @endColor @stop);
    background-image:-webkit-gradient(linear, 0 @start, 0 @stop, from(@startColor), to(@endColor));
    background-image:-webkit-linear-gradient(top, @startColor @start, @endColor @stop);
    background-image:-o-linear-gradient(top, @startColor @start, @endColor @stop);
    background-image:linear-gradient(to bottom, @startColor @start, @endColor @stop);
}
.lg_3(@startColor, @midColor, @endColor, @start:0, @mid: 60%, @stop:100%) when (isnumber(@mid)){
    background-color:mix(@startColor, @endColor, 40%);
    background-image:-moz-linear-gradient(top, @startColor @start, @midColor @mid, @endColor @stop);
    background-image:-webkit-gradient(linear, 0 @start, 0 @stop, from(@startColor), color-stop(@mid, @midColor), to(@endColor));
    background-image:-webkit-linear-gradient(top, @startColor @start, @midColor @mid, @endColor @stop);
    background-image:-o-linear-gradient(top, @startColor @start, @midColor @mid, @endColor @stop);
    background-image:linear-gradient(to bottom, @startColor @start, @midColor @mid, @endColor @stop);
}
.lg_3(@bgColor, @startColor, @midColor, @endColor, @start:0, @mid: 60%, @stop:100%) when (iscolor(@endColor)){
    background-color:@bgColor;
    background-image:-moz-linear-gradient(top, @startColor @start, @midColor @mid, @endColor @stop);
    background-image:-webkit-gradient(linear, 0 @start, 0 @stop, from(@startColor), color-stop(@mid, @midColor), to(@endColor));
    background-image:-webkit-linear-gradient(top, @startColor @start, @midColor @mid, @endColor @stop);
    background-image:-o-linear-gradient(top, @startColor @start, @midColor @mid, @endColor @stop);
    background-image:linear-gradient(to bottom, @startColor @start, @midColor @mid, @endColor @stop);
}


// placeholder
.placeholder(@color) {
    &::-webkit-input-placeholder {
        color: @color;
    }
    &:-moz-placeholder {
        color: @color;
    }
    &::-moz-placeholder {
        color: @color;
    }
    &:-ms-input-placeholder {
        color: @color;
    }
}


// 翻转
.flipx(){
    -moz-transform:scaleX(-1);
    -webkit-transform:scaleX(-1);
    -o-transform:scaleX(-1);
    transform:scaleX(-1);
    filter:FlipH;
}
.flipy(){
    -moz-transform:scaleY(-1);
    -webkit-transform:scaleY(-1);
    -o-transform:scaleY(-1);
    transform:scaleY(-1);
    filter:FlipV;
}

// opacity
.op(@opacity:1){
    filter: ~"alpha(opacity = " @opacity*100 ~")";
    -moz-opacity:@opacity;
    -khtml-opacity: @opacity;
    opacity: @opacity;
}
.bop(white,@o:1){
    @oie:argb(rgba(255,255,255,@o));
    background:rgba(255,255,255,@o)!important;
    filter: ~"progid:DXImageTransform.Microsoft.gradient(GradientType=0, startColorstr='@{oie}',endcolorstr = '@{oie}')";
}
.bop(black,@o:1){
    @oie:argb(rgba(0,0,0,@o));
    background:rgba(0,0,0,@o)!important;
    filter: ~"progid:DXImageTransform.Microsoft.gradient(GradientType=0, startColorstr='@{oie}',endcolorstr = '@{oie}')";
}
.bop(@rgba){
    @argb:argb(@rgba);
    background:@rgba!important;
    filter: ~"progid:DXImageTransform.Microsoft.gradient(GradientType=0, startColorstr='@{argb}',endcolorstr = '@{argb}')";
}

// library
.dn(){display:none;}.di(){display:inline;}.dib(){display:inline-block;}.b_dib(){display:inline-block;*display:inline;*zoom:1;}.db(){display:block;}.cell(){display:table-cell;}.bn(){background:none;}
.vh(){visibility:hidden;}.vv(){visibility:visible;}
.static(){position:static;}.rel(){position:relative;}.abs(){position:absolute;}.fixed(){position:fixed;}
.ov(){overflow:visible;}.oh(){overflow:hidden;}.z(){*zoom:1;}
.l(){float:left;}.r(){float:right;}.fn(){float:none;}.cl(){clear:both;}


.tc(){text-align:center;}.tr(){text-align:right;}.tl(){text-align:left;}
.vt(){vertical-align:top;}.vm(){vertical-align:middle;}.vb(){vertical-align:bottom;}
.f0(){font-size:0;}
.fa(){font-family:Arial;}.fs(){font-family:SimSun;}.fyh(){font-family:"Microsoft YaHei";}
.n(){font-weight:400;font-style:normal;}.b(){font-weight:700;}.i(){font-style:italic;}
.tdn(){text-decoration:none;}
.poi(){cursor:pointer;}
.group(){
    .z;
    &:after{content:"\200B";.db;.h(0);.cl;}
}
.flex(){
    // display:table-cell;.fn;width:2000px; *display:inline-block; *width:auto;

    display:table-cell;.fn;width:auto;*display:block;*zoom:1;
    &:after{content:" . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . ";visibility:hidden; clear:both;height:0 !important;display:block;line-height:0;}

}
.flex_simple(){.fn;.w(auto);.oh;.z;*overflow:visible;}
.tj(){
    text-align:justify;
    text-justify:distribute-all-lines;/*ie6-8*/
    text-align-last:justify;/* ie9*/
    .f(0);
    &:after{.dib;.w(100%);.h(0);.f(0);.oh;content:".";}
}


// arrow
.arrow(@borderWidth, @borderColor){
    .setArrowWidth(@borderWidth);
    .setArrowColor(@borderColor);
}
.setArrowColor(@borderColor){
    &.arrow_t{border-bottom-color:@borderColor;}
    &.arrow_r{border-left-color:@borderColor;}
    &.arrow_b{border-top-color:@borderColor;}
    &.arrow_l{border-right-color:@borderColor;}        
}
.setArrowWidth(@borderWidth){border-width:@borderWidth;}



.setArrow(@direction, @borderWidth, @borderColor) when (@direction = top){
    .dib;.square(0);border-width:@borderWidth;border-style:dashed;border-color:transparent;
    
    .arrow_t(@borderColor);
}
.setArrow(@direction, @borderWidth, @borderColor) when (@direction = right){
    .dib;.square(0);border-width:@borderWidth;border-style:dashed;border-color:transparent;
    .arrow_r(@borderColor);
}
.setArrow(@direction, @borderWidth, @borderColor) when (@direction = bottom){
    .dib;.square(0);border-width:@borderWidth;border-style:dashed;border-color:transparent;
    .arrow_b(@borderColor);
}
.setArrow(@direction, @borderWidth, @borderColor) when (@direction = left){
    .dib;.square(0);border-width:@borderWidth;border-style:dashed;border-color:transparent;
    .arrow_l(@borderColor);
}
.arrow_t(@c){
    border-top-width:0;
    border-bottom-color:@c;
    border-bottom-style:solid;
}
.arrow_r(@c){
    border-right-width:0;
    border-left-color:@c;
    border-left-style:solid;
}
.arrow_b(@c){
    border-bottom-width:0;
    border-top-color:@c;
    border-top-style:solid;
}
.arrow_l(@c){
    border-left-width:0;
    border-right-color:@c;
    border-right-style:solid;
}

.setDot(@c:#AAAAAA,@size:8px){
    .dib;.vm;.n;.c(@c);.f(@size);
}

//CSS3 filter
.filterBlur(@val) {
    -webkit-filter: blur(@val);
    -moz-filter: blur(@val);
    -o-filter: blur(@val);
    -ms-filter: blur(@val);
    filter: blur(@val);
}
